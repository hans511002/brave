apply plugin: 'com.android.application'

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    defaultConfig {
        applicationId 'org.cocos2dx.braveApp'
        minSdkVersion PROP_MIN_SDK_VERSION.toInteger()
        targetSdkVersion PROP_TARGET_SDK_VERSION.toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions -w "
                arguments "-DANDROID_ARM_NEON=TRUE",
                        '-DANDROID_PLATFORM=android-19',
                        '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_NATIVE_API_LEVEL=android-'+PROP_TARGET_SDK_VERSION.toInteger()
                       //'-DCMAKE_TOOLCHAIN_FILE=D:\\work\\gm\\tmp\\cocos2d\\cmake\\android.toolchain.cmake'
            }
        }
        ndk{
            abiFilters  'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            externalNativeBuild {
                cmake {
                    arguments '-DDEBUG_TEST=1'
                }
            }
        }
    }
    sourceSets.main {
        //java.srcDir "src/main"
        //res.srcDir "res"
        //manifest.srcFile "src/main/AndroidManifest.xml"
        assets.srcDir "../../Resources/res"
        assets.exclude "**/*.zip"
    }
    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
        }
    }
    lintOptions {
        abortOnError false
        disable 'TypographyFractions', 'TypographyQuotes'
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/assets/${variant.dirName}"
    copy {
        from "${buildDir}/../../../Resources/res"
        into "${buildDir}/intermediates/assets/${variant.dirName}"
        exclude "**/*.gz"
        exclude "${buildDir}/../../../Resources/res/**/**/*.zip","${buildDir}/../../../Resources/res/**/**/library/**"
        //excludes.add("**/*.zip")
        //delete ("${buildDir}/../../Resources/res\\cast\\Air_mc\\Air_mc.zip")
        exclude{
            File f = it.file
            //println f.absolutePath
            f.absolutePath.endsWith(".zip") ||  f.absolutePath.endsWith(".dbproj") || f.absolutePath.indexOf("library")>0
        }
    }

    variant.mergeAssets.doLast {
        copy {
            from "${buildDir}/intermediates/assets/${variant.dirName}"
            into "${buildDir}/tmp/assets/${variant.dirName}"
            exclude{
                File f = it.file
                //println f.absolutePath
                if(f.absolutePath.endsWith(".zip") || f.absolutePath.endsWith("library")  || f.absolutePath.endsWith(".dbproj")){
                    delete f.absolutePath
                }
            }
        }
    }


}

dependencies {
   // implementation project(':libcocos2dx')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation project(':libcocos2dx')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
